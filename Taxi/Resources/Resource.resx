<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewUser" xml:space="preserve">
    <value>Add new user</value>
  </data>
  <data name="Administrator" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="Client" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="Driver" xml:space="preserve">
    <value>Driver</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="addString" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="deleteString" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="editString" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Operator" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ReportViewer" xml:space="preserve">
    <value>ReportViewer</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="AddNewCar" xml:space="preserve">
    <value>Add new car</value>
  </data>
  <data name="AddYourCarInfoHere" xml:space="preserve">
    <value>Add your car info here!</value>
  </data>
  <data name="CarClass" xml:space="preserve">
    <value>Car Class</value>
  </data>
  <data name="CarClassEconom" xml:space="preserve">
    <value>Econom class</value>
  </data>
  <data name="CarClassGeneral" xml:space="preserve">
    <value>General class</value>
  </data>
  <data name="CarClassPremium" xml:space="preserve">
    <value>Premium class</value>
  </data>
  <data name="CarManufactureDate" xml:space="preserve">
    <value>Car manufacture Date</value>
  </data>
  <data name="CarName" xml:space="preserve">
    <value>Car Name</value>
  </data>
  <data name="CarNumber" xml:space="preserve">
    <value>Car Number</value>
  </data>
  <data name="CarOccupation" xml:space="preserve">
    <value>Car Occupation</value>
  </data>
  <data name="CarPetrolConsumption" xml:space="preserve">
    <value>Car Petrol Consumption</value>
  </data>
  <data name="CarPetrolType" xml:space="preserve">
    <value>Petrol Type</value>
  </data>
  <data name="CarRegistration" xml:space="preserve">
    <value>Car registration</value>
  </data>
  <data name="CarState" xml:space="preserve">
    <value>Car State</value>
  </data>
  <data name="CarStateRepairing" xml:space="preserve">
    <value>On repair</value>
  </data>
  <data name="CarStateWorking" xml:space="preserve">
    <value>Working</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle name</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="UpdateProfile" xml:space="preserve">
    <value>Update profile</value>
  </data>
  <data name="ContactInformation" xml:space="preserve">
    <value>Contact Information</value>
  </data>
  <data name="CarPetrolDiesel" xml:space="preserve">
    <value>Diesel</value>
  </data>
  <data name="CarPetrolNormal" xml:space="preserve">
    <value>Normal-80</value>
  </data>
  <data name="CarPetrolOther" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="CarPetrolPremium" xml:space="preserve">
    <value>Premium-95</value>
  </data>
  <data name="CarPetrolRegular" xml:space="preserve">
    <value>Regular-92</value>
  </data>
  <data name="CarPetrolSuper" xml:space="preserve">
    <value>Super-98</value>
  </data>
  <data name="LoginEmailExist" xml:space="preserve">
    <value>UserName or Email is already exists</value>
  </data>
  <data name="Set" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="Setdate" xml:space="preserve">
    <value>Set date</value>
  </data>
  <data name="SetVIPStatusPage" xml:space="preserve">
    <value>Set VIP Status</value>
  </data>
  <data name="EmptyEmail" xml:space="preserve">
    <value>Email is empty</value>
  </data>
  <data name="EmptyPassword" xml:space="preserve">
    <value>Password is empty</value>
  </data>
  <data name="EmptyUserName" xml:space="preserve">
    <value>UserName is empty</value>
  </data>
  <data name="ShortPassword" xml:space="preserve">
    <value>Password is less than 5 characters</value>
  </data>
  <data name="ShortUserName" xml:space="preserve">
    <value>UserName is less than 4 characters</value>
  </data>
  <data name="District" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="MainLink" xml:space="preserve">
    <value>To main menu</value>
  </data>
  <data name="Messages" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="PersonalCabinet" xml:space="preserve">
    <value>Personal cabinet</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ActionsColumn" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="CarEditor" xml:space="preserve">
    <value>Autopark</value>
  </data>
  <data name="CarResetBtn" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="CarSaveBtn" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="CarsDeleteInfo" xml:space="preserve">
    <value>Delete info</value>
  </data>
  <data name="CarsDetails" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="CarToMenuBtn" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="CreateAttention1" xml:space="preserve">
    <value>Enter all required information into the form below.</value>
  </data>
  <data name="CreateAttention2" xml:space="preserve">
    <value>You need to add all information correctly.</value>
  </data>
  <data name="CreateHeader1" xml:space="preserve">
    <value>Here is car registration page</value>
  </data>
  <data name="CreateHeader2" xml:space="preserve">
    <value>Keep in mind</value>
  </data>
  <data name="DeleteAttention1" xml:space="preserve">
    <value>You are attempting to delete all information about selected car. Deleted information will be lost.</value>
  </data>
  <data name="DeleteHeader1" xml:space="preserve">
    <value>Attention!</value>
  </data>
  <data name="DetailsAttention1" xml:space="preserve">
    <value>You can view all your car info here.</value>
  </data>
  <data name="DetailsHeader1" xml:space="preserve">
    <value>Here is car details page</value>
  </data>
  <data name="detailsString" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="EditAttention1" xml:space="preserve">
    <value>Enter all required information into the form below.</value>
  </data>
  <data name="EditAttention2" xml:space="preserve">
    <value>Edit or delete your information wisely!</value>
  </data>
  <data name="EditHeader1" xml:space="preserve">
    <value>Here is car registration page</value>
  </data>
  <data name="EditHeader2" xml:space="preserve">
    <value>Be carefull</value>
  </data>
  <data name="EditYourCar" xml:space="preserve">
    <value>Edit car info</value>
  </data>
  <data name="Garage" xml:space="preserve">
    <value>Your garage</value>
  </data>
  <data name="GarageAttention1" xml:space="preserve">
    <value>All information about your car or cars will be displayed here. You can always view, add, edit or delete each car you want.</value>
  </data>
  <data name="GarageAttention2" xml:space="preserve">
    <value>Always keep your information up to date. Do not forget to update information you submited.</value>
  </data>
  <data name="GarageHeader1" xml:space="preserve">
    <value>This is your virtual garage</value>
  </data>
  <data name="GarageHeader2" xml:space="preserve">
    <value>Keep in mind</value>
  </data>
  <data name="Greeting" xml:space="preserve">
    <value>Welcome home</value>
  </data>
  <data name="ChangeMenu" xml:space="preserve">
    <value>Change menu</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="OrderTaxi" xml:space="preserve">
    <value>Order Taxi</value>
  </data>
  <data name="SingUp" xml:space="preserve">
    <value>Sing Up</value>
  </data>
  <data name="UserId" xml:space="preserve">
    <value>User Id</value>
  </data>
  <data name="UserMenu" xml:space="preserve">
    <value>User list</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="CreateLocation" xml:space="preserve">
    <value>We still don't know where You are. Please choose district of Your location.</value>
  </data>
  <data name="CreateNewAddressString" xml:space="preserve">
    <value>Add new address</value>
  </data>
  <data name="DefaultValueOfCity" xml:space="preserve">
    <value>Chernivtsi</value>
  </data>
  <data name="EditLocation" xml:space="preserve">
    <value>If You like to change Your location,  please choose district from the list.</value>
  </data>
  <data name="NumberHouse" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="TitleCreateAddress" xml:space="preserve">
    <value>Add new address</value>
  </data>
  <data name="TitleCreateLocation" xml:space="preserve">
    <value>Add Your location</value>
  </data>
  <data name="TitleDeleteAddress" xml:space="preserve">
    <value>Delete current address</value>
  </data>
  <data name="TitleEditAddress" xml:space="preserve">
    <value>Edit current address</value>
  </data>
  <data name="TitleEditLocation" xml:space="preserve">
    <value>Update Your location</value>
  </data>
  <data name="TitleLeftMenuUserAddress" xml:space="preserve">
    <value>Favourite addresses</value>
  </data>
  <data name="TitleMainMenuAddress" xml:space="preserve">
    <value>Your favourite addresses</value>
  </data>
  <data name="TitleMainMenuLocation" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="YourCurrentLocation" xml:space="preserve">
    <value>You are in:</value>
  </data>
  <data name="ConfirmDeletingAddress" xml:space="preserve">
    <value>Are you sure you want to delete this address?</value>
  </data>
  <data name="CarNameErrorMessage" xml:space="preserve">
    <value>Name must be less than 50 symbols</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="DistrictPartAttention1" xml:space="preserve">
    <value>Here you can find information about other drivers currently working.
					To start workingshift please press "Start Shift" button</value>
  </data>
  <data name="DistrictPartAttention2" xml:space="preserve">
    <value>Do not forget to end your working shift by pressing "End Shift" button</value>
  </data>
  <data name="DistrictPartHeader1" xml:space="preserve">
    <value>This is your working place</value>
  </data>
  <data name="DistrictPartHeader2" xml:space="preserve">
    <value>Keep in mind</value>
  </data>
  <data name="WorkShift" xml:space="preserve">
    <value>Workshift</value>
  </data>
  <data name="WorkShiftEnd" xml:space="preserve">
    <value>End Shift</value>
  </data>
  <data name="WorkShiftStart" xml:space="preserve">
    <value>Start Shift</value>
  </data>
  <data name="WorkStarted" xml:space="preserve">
    <value>Shift started</value>
  </data>
  <data name="Citydistricts" xml:space="preserve">
    <value>City districts</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="DistrictEditor" xml:space="preserve">
    <value>District editor</value>
  </data>
  <data name="RequiredError" xml:space="preserve">
    <value>The current field is empty. Please fill it.</value>
  </data>
</root>